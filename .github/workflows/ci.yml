name: throttled CI

on:
  pull_request:
  push:
  schedule:
    # once a day at 08:00
    - cron: "0 8 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    env:
      GOPATH: "/home/runner/work/throttled/throttled/go"

      # This isn't great, but the interplay between GitHub Actions' Go action
      # and pre-Go Modules projects is *very* bad and doesn't work out of the
      # box. I've hacked my way around it here by specifying a GOPATH inside of
      # GITHUB_WORKSPACE, checking out to an appropriate place in it, then
      # explicitly specifying a working directory for every single Go-related
      # step.
      #
      # The reason it's nested so deeply is that actions/checkout@v2 will only
      # allow a path relative to `/home/runner/work/throttled/throttled/`.
      #
      # All of this can be ripped out once the project is on Go Modules.
      WORKING_DIRECTORY: "/home/runner/work/throttled/throttled/go/src/github.com/throttled/throttled"

    strategy:
      matrix:
        go:
          - 1.12.x
          - 1.13.x
          - 1.14.x

    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.WORKING_DIRECTORY }}

      - name: Debug
        run: |
          echo "github.ref=${{ github.ref }}"
          echo "go env GOPATH=$(go env GOPATH)"
          echo "pwd=$(pwd)"
          echo "HOME=${HOME}"
          echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"
          echo "WORKING_DIRECTORY=${WORKING_DIRECTORY}"

      # Used to force dependencies to re-cache once a day so that we don't run
      # into any weird cache invalidation problems, so to make sure that
      # dependency fetches keep working.
      - name: Get date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d")"
        shell: bash

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          # These correspond to what's in `make get-deps`.
          #
          # Don't try to use variables in these paths.
          path: |
            /home/runner/work/throttled/throttled/go/src/github.com/go-redis/
            /home/runner/work/throttled/throttled/go/src/github.com/gomodule/
            /home/runner/work/throttled/throttled/go/src/github.com/hashicorp/
            /home/runner/work/throttled/throttled/go/src/github.com/x/
          key: ${{ runner.os }}-${{ steps.get-date.outputs.date }}-cache-dependencies

      - name: Install dependencies
        run: make get-deps
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: "Go: Build"
        run: go build ./...
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: "Go: Test"
        run: go test -v ./...
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: "Go: Test (with `-race` and `-bench`)"
        run: go test -race -bench=. -cpu=1,2,4
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: "Go: Test (with coverage)"
        run: |
          go test -coverprofile=throttled.coverage.out .
          go test -coverprofile=store.coverage.out ./store
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: "Go: Vet"
        run: go vet ./...
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: "Check: Gofmt"
        run: scripts/check_gofmt.sh
        working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: "Check: Lint"
        run: "$(go env GOPATH)/bin/golint -set_exit_status ./..."
        working-directory: ${{ env.WORKING_DIRECTORY }}
